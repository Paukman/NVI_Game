import React, { createContext, useContext, useMemo } from 'react';
import PropTypes from 'prop-types';

import { HotelContext } from 'contexts';
import { use{{moduleNameCaps}} } from 'pages/{{pageDirCaps}}/hooks';

export const {{providerName}}Context = createContext();

const {{providerName}}Provider = ({ children }) => {
  {{providerName}}Provider.propTypes = {
    children: PropTypes.node.isRequired,
  };

  const { hotels } = useContext(HotelContext);

  const {{moduleNameSmall}} = use{{moduleNameCaps}}();

  // hotels might not be immediately available, have to do it this way...
  useMemo(() => {
    if (hotels?.length !== 0) {
      {{moduleNameSmall}}.onChange('hotels', hotels);
    }
  }, [hotels]);

  return (
    <{{providerName}}Context.Provider
      value={{
        {{moduleNameSmall}}: {
          state: {{moduleNameSmall}}.{{moduleNameSmall}}State,
          onChange: {{moduleNameSmall}}.onChange,
          displayReport: {{moduleNameSmall}}.displayReport,
          onHandleDownload: {{moduleNameSmall}}.onHandleDownload,
        },
      }}
    >
      {children}
    </{{providerName}}Context.Provider>
  );
};

export { {{providerName}}Provider };
